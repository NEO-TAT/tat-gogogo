// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package di

import (
	"github.com/google/wire"
	"tat_gogogo/data/crawler/repository"
	"tat_gogogo/interface/controller"
	"tat_gogogo/usecase"
	"tat_gogogo/usecase/service"
)

// Injectors from injector.go:

func InjectCourseController() controller.CoursesController {
	resultRepository := repository.NewResultRepository()
	curriculumRepository := repository.NewCurriculumRepository()
	infoRepository := repository.NewInfoRepository()
	resultService := service.NewResultService(resultRepository)
	resultUseCase := usecase.NewResultUseCase(resultRepository, curriculumRepository, infoRepository, resultService)
	curriculumService := service.NewCurriculumService(curriculumRepository)
	curriculumUseCase := usecase.NewCurriculumUseCase(curriculumRepository, curriculumService)
	coursesController := controller.NewCoursesController(resultUseCase, curriculumUseCase)
	return coursesController
}

func InjectCurriculumController() controller.CurriculumController {
	resultRepository := repository.NewResultRepository()
	curriculumRepository := repository.NewCurriculumRepository()
	infoRepository := repository.NewInfoRepository()
	resultService := service.NewResultService(resultRepository)
	resultUseCase := usecase.NewResultUseCase(resultRepository, curriculumRepository, infoRepository, resultService)
	curriculumController := controller.NewCurriculumController(resultUseCase)
	return curriculumController
}

func InjectLoginController() controller.LoginController {
	resultRepository := repository.NewResultRepository()
	curriculumRepository := repository.NewCurriculumRepository()
	infoRepository := repository.NewInfoRepository()
	resultService := service.NewResultService(resultRepository)
	resultUseCase := usecase.NewResultUseCase(resultRepository, curriculumRepository, infoRepository, resultService)
	curriculumService := service.NewCurriculumService(curriculumRepository)
	curriculumUseCase := usecase.NewCurriculumUseCase(curriculumRepository, curriculumService)
	loginController := controller.NewLoginController(resultUseCase, curriculumUseCase)
	return loginController
}

// injector.go:

var provideCurriculumRepo = wire.NewSet(repository.NewCurriculumRepository)

var provideResultRepo = wire.NewSet(repository.NewResultRepository)

var provideInfoRepo = wire.NewSet(repository.NewInfoRepository)

var provideCurriculumService = wire.NewSet(service.NewCurriculumService)

var provideResultService = wire.NewSet(service.NewResultService)

var provideInfoService = wire.NewSet(service.NewInfoService)

var provideCurriculumController = wire.NewSet(
	provideCurriculumRepo,
	provideResultRepo,
	provideInfoRepo,
	provideResultService, usecase.NewResultUseCase, controller.NewCurriculumController,
)

var provideCoursesController = wire.NewSet(
	provideCurriculumRepo,
	provideResultRepo,
	provideInfoRepo,
	provideResultService,
	provideCurriculumService, usecase.NewResultUseCase, usecase.NewCurriculumUseCase, controller.NewCoursesController,
)

var provideLoginController = wire.NewSet(
	provideCurriculumRepo,
	provideResultRepo,
	provideInfoRepo,
	provideResultService, usecase.NewResultUseCase, provideCurriculumService, usecase.NewCurriculumUseCase, controller.NewLoginController,
)
